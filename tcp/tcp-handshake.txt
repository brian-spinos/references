TCP Handshake (3 way)

Why do we need this? 
To establish a connection between two hosts in the internet


- It uses the TCP protocol, of course

1. [HOST A] ---->   SYN   ----> [HOST B]
2. [HOST A] <---- ACK/SYN <---- [HOST B]
3. [HOST A] ---->   ACK   ----> [HOST B]
4. Now a two-way connection is established between the two hosts, 
   they are ready to exchange messages


==================================================================================================== More details

1. [HOST A] ---->     [SYN - SEQ# 9001, ACK# 0,    SYN# 1]  ----> [HOST B]
2. [HOST A] <---- [ACK/SYN - SEQ# 5001, ACK# 9002, SYN# 1]  <---- [HOST B]  // ACK# 9002 -- it is the previous `SEQ# 9001` + 1
3. [HOST A] ---->     [ACK - SEQ# 9002, ACK# 5002, SYN# 0]  ----> [HOST B]  // SEQ# 9002 -- is same as previous `ACK# 9002` AND ACK# 5002 -- it is the previous `SEQ# 5001` + 1

====================================================================================================

Gotcha: TLS handshake happens AFTER TCP handshake

The three way handshake is needed because both parties need to sync their segment sequence numbers (used during their transmission)






==================================================================================================== (need review)

https://www.quora.com/What-is-the-difference-between-an-HTTP-server-and-a-TCP-server-in-NodeJS


In TCP (sockets), it is a different paradigm. The client opens a longer-lived channel between it and the server, where both can send each other anything (data) anytime. Any one can terminate at any time.


TLS handshake happens after the TCP handshake


.
SSL is the old version of TLS

.

https://www.cloudflare.com/learning/ssl/what-is-ssl/

.

HTTP messages are, ultimately, delivered through TCP/IP connections.

====================================================================================================
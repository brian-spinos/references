

---------------------------------------------------------------------------------------------------- VIM 

plugins

---------------------------------------------------------------------------------------------------- network
Wild card mask: reverse of subnet mask


IP: x.x.x.0 is network address, x.x.x.255 is broadcast address, x.x.x.1 is router address

MakeOSI/ tcp/ip paper 

---------------------------------------------------------------------------------------------------- JS

Console.table(obj)

More js array funcs


Neural network from scratch js

Mockapi.io

---------------------------------------------------------------------------------------------------- react.js 
Data-testid in browser?

----------------------------------------------------------------------------------------------------

Build os from scratch

----------------------------------------------------------------------------------------------------

Kql: kibana query

Aaa.bbb:”foo”

"foo`$*"

"foo`*"

---------------------------------------------------------------------------------------------------- GIT

Remove changes from 1 file

Add changes from another branch to 1 file


Move fast from a wip branch to another branch, and back

diff branches:
feature/foo
origin/feature/foo



Rebase, issues?


How to handle complex merges: its a risk


Git checkout a specific commit:
$ git checkout <commit-sha>
# dettached head state here
# to go back:
$ git checkout <branch-name>


HEAD is a pointer to a commit


The branch name point to the latest commit in that branch ??? Not sure

---------------------------------------------------------------------------------------------------- CSS GRID

Div mt-8 grid lg:grid-cols-3 gap-10
   Div col-span-2 // item will span 2 columns


lg:
md:
sm:


gap-10 // space all around item
gap-x-8
gap-y-12

grid-rows-4

grid-flow-col // instes of left to right, columns will go top to bottom

grid-flow-row // default ???



////// classes on the cchild

justify-self: start | end // content inside item goes left| right

col-start-4 // item isbplaces on the 4th place
col-end-7 // item is placed at the end of the row ??

row-span-2
col-span-2


////// parent
align-items: start | end // items start on the top | bottom

justify-items: start | end // items start left | right

---------------------------------------------------------------------------------------------------- CSS Tailwind

Parent div: grid lg:grid-cols-3 gap-10
// grid with 3 cols on large screens, and gap of 10 between items

Child div: col-span-2
// span 2 cols instead of 1

----------------------------------------------------------------------------------------------------
Same origin policy

---------------------------------------------------------------------------------------------------- LDAP
Ldap is like a Enterprise address book!


- Ldap server


Used to store data about employees of a big company ?? 

Eduardo souza:
Normalmente para ser usado como um central repository para username e passwords

---------------------------------------------------------------------------------------------------- Nasm

 https://youtu.be/5eWiz3soaEM


// Nasm cool
https://cs.lmu.edu/~ray/notes/nasmtutorial/


----------------------------------------------------------------------------------------------------

Study agile, features, epics

---------------------------------------------------------------------------------------------------- SMTP server 

email client sends data to SMTP server !

Gmail has an SMTP server, yahoo has one
Hotmail has one…

SMTP servers communicate among them selves too



// prorocols: 
IMAP
POP


SMTP Username, password, host - to connect!


smtp.gmail.com:587

---------------------------------------------------------------------------------------------------- Powermock

Org.mockito.ArgumentMatchers.any()

.any(Foo.class)
.anyBoolean()

Foo spy = PowerMockito.spy(foo);

Mockito.any(Foo.class)


Arg captor, injectMocks, mock void methods to do stuff, partial mocking using spies
https://dzone.com/articles/unit-testing-using-mockito-and-powermock



.


@PowerMockIgnore("javax.management.*")




@RunWith(PowerMockRunner.class)
@PowerMockIgnore("javax.management.*")
@PrepareForTest({SomeClass.class, Thread.class})
public class SomeClassTestCase {

@Test(expected=Test.None.class)
public void testRun() throws Exception {
PowerMockito.mockStatic(Thread.class);
PowerMockito.doThrow(new RuntimeException("mock error")).when(Thread.class);
Thread.sleep(Matchers.anyLong());

SomeClass someClass = new SomeClass();

// test
someClass.run();
}
}

---------------------------------------------------------------------------------------------------- Gradle
What is a configuration?


Tasks > build > clean

Source sets:
Src/main/java
Src/test/java
Src/main/gradle
Src/test/gradle


Build - folder for java compiled code!


Build/reports/tests/test/index.html // test results!!!

----------------------------------------------------------------------------------------------------Maven
Phases are bound to plugins ?


Default - the default lifecycle 

Clean - is a different lifecycle 

Site - a different lifecycle 

// Gradle multi app
https://youtu.be/Ae4liqjPJNc
include “foo-bar”


---------------------------------------------------------------------------------------------------- Ejb setup

https://www.baeldung.com/ejb-intro

----------------------------------------------------------------------------------------------------

Integration vs func testing
Regression and progression

---------------------------------------------------------------------------------------------------- Zookeeper paper

When working with Apache Kafka, ZooKeeper is primarily used to track the status of nodes in the Kafka cluster and maintain a list of Kafka topics and messages.


ZooKeeper has five primary functions.  Specifically, ZooKeeper is used for controller election, cluster membership, topic configuration, access control lists, and quotas.

#1 Controller Election.  The controller is the broker responsible for maintaining the leader/follower relationship for all partitions.  If ever a node shuts down, ZooKeeper ensures that other replicas take up the role of partition leaders replacing the partition leaders in the node that is shutting down.

#2 Cluster Membership.  ZooKeeper keeps a list of all functioning brokers in the cluster.

#3 Topic Configuration.  ZooKeeper maintains the configuration of all topics, including the list of existing topics, number of partitions for each topic, location of the replicas, configuration overrides for topics, preferred leader node, among other details.

#4 Access Control Lists (ACLs).  ZooKeeper also maintains the ACLs for all topics.  This includes who or what is allowed to read/write to each topic, list of consumer groups, members of the groups, and the most recent offset each consumer group received from each partition.

#5 Quotas.  ZooKeeper accesses how much data each client is allowed to read/write.

---------------------------------------------------------------------------------------------------- K8s

Kubernetes deploys and manages/Orchestrates the many containers/pods in a node
 
And scales pods up and down

K8s Cluster: a set of nodes/VMs
Master node
Worker node


Pods: the smallest deployable unit in k8s, it has:
- main container
-init container
- side car containers (support the main container)
- volumes (to share data between containers)
- a unique IP address for the pod

---------------------------------------------------------------------------------------------------- Spring security

https://youtu.be/her_7pa0vrg


https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/


---------------------------------------------------------------------------------------------------- Good jdbc

https://youtu.be/0uLqdBpYAVA


GitHub:

https://github.com/danvega/hello-jdbc

---------------------------------------------------------------------------------------------------- SpringBoot turorial with jdbc and auth

https://youtu.be/5VUjP1wMqoE

---------------------------------------------------------------------------------------------------- TCP/IP packet diagram

http://nullhaus.com/2014/01/deep-packet-inspection-dpi/

---------------------------------------------------------------------------------------------------- Hmac

Secures data in transit? 

Basically uses a private key that signs the payload?


---------------------------------------------------------------------------------------------------- Java spring

Lynda.com


https://youtu.be/CtD9B9TU_cY



Groovy other half
Derek bannas - youtube


https://www.tutorialspoint.com/gradle/gradle_overview.htm


Java generic classes
Peggy fisher


Java data structures
Peggy Fisher 




Java 8 File io


Websocket
SSL
TCP/IP


Excel 2019 Essential training
Chapter 6, video 1


Pluralsight: programming with dates and time in java 8
Chapter 4, video 5


Gradle - I need to know build script


————————————————— DONE:

Java 8 essential training
David gassner

Spring mvc

Spring: framework in depth

Learning Spring with spring boot

Springboot essential training

Spring 5 frank moley

———————
// reads foo.bar from the application.properties file!!!
// there is still more work to be done for this to work
@Value(“${foo.bar}”)
private String fooBar;



Session bean - like rails session
Request bean - 1 instance per request

---------------------------------------------------------------------------------------------------- mac

Shift command 5 - record screen

---------------------------------------------------------------------------------------------------- TCP

https://www.quora.com/What-is-the-difference-between-an-HTTP-server-and-a-TCP-server-in-NodeJS


In TCP (sockets), it is a different paradigm. The client opens a longer-lived channel between it and the server, where both can send each other anything (data) anytime. Any one can terminate at any time.


TLS handshake happens after the TCP handshake


.
SSL is the old version of TLS

.

https://www.cloudflare.com/learning/ssl/what-is-ssl/

.

HTTP messages are, ultimately, delivered through TCP/IP connections.

---------------------------------------------------------------------------------------------------- Monad

Monads are used for composition!!!


Like vertx compose chain


.compose is the >>= operator!!!

Future<String> fs is the monad!!!!


---------------------------------------------------------------------------------------------------- java

“The build” == the deliverable
Class loader

Server (like tomcat)
    What is it?
    Can we just drop our code there?

Bean scope: session, Singleton, request,prototype,...
entityManager - instance to do CRUD, from JPA
Intellij > sertings > sustem settings > http proxy
Mven profile , like rails env: test, development, production
Java.nio.file.* package!
Optional.of(xxx);
Test that whitbox can set fields in mock
@InjectMocks
Java jdk 1.1 had RMI, for distributes systems!
Intelisense for mock object
@Mock
JavaEE is just a web framework
Reactor jar
Deadlock - all threads are waiting, nothing is done
Glassfish4 to use EJB
Nexus - stores jars ???
Webserver and containers are programs
Drools baeldung ???
Java http calls
Jetty baeldung
Private final dep
Wiremock
Print java exceptions collections tree diagram
Java analysis on threads and memory dumps
Jmusic
Test new File and new FileInputStream
    Test multiple system classes
Jmeter




http://javapapers.com

http://yfain.github.io/Java4Kids/



Class loader
Time package
Nio package
Deadlock
Reactor
Java files stuff
Logger
Tomcat
Thymeleaf
J2EE
Jar
EAR
System design
Rmi
War


----------------------


Java reflection api
https://www.baeldung.com/java-reflection



Jvm on paper
JVM calls the main method
https://media-geeksforgeeks-org.cdn.ampproject.org/ii/w820/s/media.geeksforgeeks.org/wp-content/uploads/jvm-3.jpg
https://www.google.com/amp/s/www.geeksforgeeks.org/jvm-works-jvm-architecture/amp/


// Java hash
Map<String,String> map = new HashMap<>();

Set<String> s1 = map.keyset();
Set<Map.Entry<String,String>> es = map.entrySet();
map.valueSet();

for( String key : map.keySet()){
  // map.get(key);
}

---------------------------------------------------------------------------------------------------- RAILS APP 

Oauth eith doorkeeper gem
Ec2 nohup
Email devise
Env variables
Action cable
Scale to mobile
Add forms
View details of test
Ab test, add visitor counter

----------------------------------------------------------------------------------------------------

Ports
Bounce ports
Prometheus
    Event Monitoring and alerting
    Uses HTTP
SonarQube
Cassandra
AOP - logger???
XL release
    https://xebialabs.com/products/xl-release/
Envoy
Kibana
Vault - Secrets mgmt tool
    https://www.vaultproject.io/docs/vs/
Elastic search
Consul
Jira
Drools
SOA - service oriented architecture
Owasp
SSO - single sign on (OAuth2?, Okta?)
Kanban
Stored procedures
Wsdl
Use constructor @Inject, obj.init()
Oauth
Marshall, unmarshall
Proxy
Elk
XP
Splunk
SOAP
OKTA
https://medium.freecodecamp.org/10-common-data-structures-explained-with-videos-exercises-aaff6c06fb2b
http://blog.jorgenschaefer.de/2013/01/monads-for-normal-programmers.html?m=1
Write a router AST
Write a syntax highlighter
Add nohup to my aws apps
Ab test
Apache/nginx
Learn cookie headers
Learn compiler
Write a simple compiler
Service discovery
DS - garbage collection
SOLID, GRASP - programming foundations: object oriented design Lynda.com
CS QA : https://www.indiabix.com/computer-science/questions-and-answers/
Get cs stuff with alonso
Oauth 2.0
Richardson maturity model: levels of RESTfulness
TCP socket
Network
Laracasts.com php design patterns, $9 month
Create server on my laptop and access it through iphone
Learn rally youtube
Change my google maps key
Openshift
Write code music
Add tax deductions on expenses in my code
Check cs on alonso
Inflation calculator
When studying look for cheat sheets!!!
Vault baeldung ?
How new relic works
Keyboard practice mac
Okta sso
Modem rent?
Let’s encrypt - use free TSL :)
What is mapreduce used for
Does ISP share internet?
Internet intranet extranet
Cookbooks
Mac key chain
Tcp ip smtp
Active directory
Holocron module
sharepoint
Setup load balancer
Grokking the system design interview
agile
Create my commandline $brian  - -help # list the commands I have
Intranet internet extranet
Gliffy website for charts :)
Md5 is not safe, use sha-256 ?
Add to GitHub: encryption, zip, session,
Mult Ng pps! —> https://github.com/angular/angular-cli/blob/master/docs/documentation/stories/multiple-apps.md
Post urlEncode to prevent user data with “&”
Eclipse using tomcat - https://youtu.be/6LO40oH5abg
Tomcat 404 - https://youtu.be/NrQSk9uwqaI
Jar is just a zip folder with resources and .class files
App server implements jee - tomcat 8
Scala 
play
Graphql
How okta works
Fibonacci heap // https://youtu.be/fRpsjKCfQjE
Jmusic
gRPC
    Like a rest call?
    Communication between two servers?
Graphana - Analytics, monitoring for DB
Consul baeldung
    Service discovery
    Health checking
    Configuration
Open shift - build, run, scale apps -- https://www.openshift.com




---------------------------------------------------------------------------------------------------- bash 

$ sudo netstat -tulpn
$ ps aux | nginx
$ service ???
$ top
$du -sh myfolder
$ df -ah
$ ip addr show eth0


---------------------------------------------------------------------------------------------------- Terminal vs shell vs bash

The terminal is the GUI window that you see on the screen. It takes commands and shows output. 

The shell is the software that interprets and executes the various commands that we type in the terminal. 

Bash is a particular shell.


======

Terminal is a program that run a shell , in the past it was a physical device (Before terminals were monitors with keyboards, they were teletypes) and then its concept was transferred into software , like Gnome-Terminal .

----------------------------------------------------------------------------------------------------
Poc on download file

Basically an <a> with a get request

The server sets some headers and sends the file

Because of the headers the browser will download the file.





----------------------------------------------------------------------------------------------------
Write some webassembly!

https://gist.github.com/kripken/59c67556dc03bb6d57052fedef1e61ab


----------------------------------------------------------------------------------------------------
Tmux?

https://youtu.be/LDGMF3HPKe8



----------------------------------------------------------------------------------------------------
Write code for real estate investing projection

See if renting is best to save money for down payment or not


----------------------------------------------------------------------------------------------------

Implement red black tree

https://youtu.be/g9SaX0yeneU


Best: https://youtu.be/5IBxA-bZZH8

----------------------------------------------------------------------------------------------------
Topological sort

Only for DAGs ?


Def dfs(v)
Visit v
Mark-visited v
For w in v.neighbors 
    Dfs(w) if not visited(w)
Add-to-end-of-array(v)

????


Or:  DFS post-order recersed!!!!

Post oder prints at the end of the operations

----------------------------------------------------------------------------------------------------

Pub priv key algorithm

https://youtu.be/oOcTVTpUsPQ
----------------------------------------------------------------------------------------------------
Build server
https://youtu.be/QdHvS0D1zAI
----------------------------------------------------------------------------------------------------
Upd drawing app
https://youtu.be/i6eP1Lw4gZk
----------------------------------------------------------------------------------------------------
Shell ctrl C handler
https://stackpointer.io/script/how-to-catch-ctrl-c-in-shell-script/248/
----------------------------------------------------------------------------------------------------
Http lifecycle

// extremely good, but long
https://dev.to/dangolant/things-i-brushed-up-on-this-week-the-http-request-lifecycle-

 Browser - data - http - port - tcp (3 way handshake) - break data into pieces - ip - add source and dest ip - send data

The 3 way handshake os to establish a tcp connection session with the server!


Http request and response are sent through TCP, which breaks it into packets!


----------------------------------------------------------------------------------------------------
Why SSL handshake?

Ssl was introduced for transport level security.. to protect data in transit.. 

There are 2 types : 1 way and 2 way. 

1 way is client verifies server .. 

2 way is both verify each other. This is done by exchanging public certs and matching them with the private key that is not shared 

----------------------------------------------------------------------------------------------------
RFC? ACL request?

Acl - access control list - a list of users and permissions on files, folders, programs

Rfc - request for comment


----------------------------------------------------------------------------------------------------
Firewall

----------------------------------------------------------------------------------------------------
Consul - service discovery
https://www.consul.io

----------------------------------------------------------------------------------------------------
Envoy

https://www.envoyproxy.io

----------------------------------------------------------------------------------------------------








----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------






